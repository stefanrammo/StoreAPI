const {db} = require('../db');
const Utils = require('./utils');


exports.getAll = async (req, res) => {
    res.send(await Promise.resolve(customers));
};

exports.getById = async (req, res) => {
    const customer = customers.find(c => c.id === parseInt(req.params.id));
    if (!customer) return res.status(404).send({ error: 'Customer not found' });
    res.send(await Promise.resolve(customer));
    };

exports.create = async (req, res) => {
    const { name, email, age } = req.body;
    if (!name || !email || !age) {
        return res.status(400).send({ error: 'Missing required fields' });
    }
    const existingCustomer = customers.find(c => c.name.toLowerCase() === name.toLowerCase());
    if (existingCustomer) return res.status(409).send({ error: 'Customer with the same name already exists' });

    const newCustomer = { id: customers.length + 1, name, email, age };
    customers.push(newCustomer);
    res.status(201).location(`${Utils.getBaseURL(req)}/customers/${newCustomer.id}`).send(await Promise.resolve(newCustomer));
};

exports.deleteById = async (req, res) => {
    const index = customers.findIndex(c => c.id === parseInt(req.params.id));
    if (index === -1) return res.status(404).send({ error: 'Customer not found' });

    customers.splice(index, 1);
    res.status(204).send();
}

exports.editById = async (req, res) => {
    const customer = customers.find(c => c.id === parseInt(req.params.id));
    if (!customer) return res.status(404).send({ error: 'Customer not found' });

    const { name, email, age } = req.body;
    if (!name && !email && !age) {
        return res.status(400).send({ error: 'No fields provided to update' });
    }

    // Update the customer object with provided fields
    if (name) customer.name = name;
    if (email) customer.email = email;
    if (age) customer.age = age;

    res.status(200).send(await Promise.resolve(customer));
};
