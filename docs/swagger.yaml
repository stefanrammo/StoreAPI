openapi: 3.0.2
info:
    title: SalaviinApi
    version: 1.0.0
paths:
    /drinks:
        get:
            tags:
                - drinks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of drinks:
                                    value:
                                        - Laua Viin
                                        - Viru Valge
                                        - Valge Viin
                    description: Returns a list of drinks
            summary: get list of all drinks from api
            description: Returns a list of all drinks in the API to the requesting user
        post:
            requestBody:
                description: Data of drink that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Drink'
                        examples:
                            Example of a submittable drink:
                                value:
                                    name: Laudur
                                    price: '0'
                                    description: Parim viin
                required: true
            tags:
                - drinks
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Drink that is created:
                                    value:
                                        id: 4
                                        name: Laudur
                                        price: '0'
                                        description: Parim viin
                    description: Return 201 to user if creation of new drink was successful
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Missing params:
                                    value:
                                        -
                                            error: One or multiple param(s) missing
                    description: Return 400 to the user if one or multiple param(s) are missing
            summary: add new drink
            description: Adds a new drink into the array
    '/drinks/{id}':
        get:
            tags:
                - drinks
            parameters:
                -
                    examples:
                        Example of id of drink:
                            value:
                                - 1
                    name: id
                    description: id of drink the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a drink with details:
                                    value:
                                        id: 1
                                        name: Laua Viin
                                        price: 2
                                        description: ''
                    description: Returns details of a drink to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Invalid drink id:
                                    value:
                                        error: Invalid id inserted
                    description: Returns 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Drink /w+ was not found:
                                    value:
                                        -
                                            error: Drink \w+ was not found in drink array
                    description: Returns 404 to the user if drink with this id is not found
            operationId: id
            summary: Get full details of the drink
            description: Return full details of the given id of drinks
        put:
            requestBody:
                description: Properties of drink to be changed
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Drink'
                        examples:
                            Example of drink properties to be changed in UPDATE:
                                value:
                                    name: lautaviina
                                    price: 23
                                    description: hyvä
                required: true
            tags:
                - drinks
            parameters:
                -
                    examples:
                        Example of id of drink:
                            value: '1'
                    name: id
                    description: Id of drink to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of a changed Drink:
                                    value:
                                        id: 1
                                        order_id: 1
                                        name: lautaviina
                                        price: 23
                                        description: hyvä
                    description: Returns the modified Drink to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of invalid params:
                                    value: '{ error: ''Invalid drink ID'' }'
                    description: User has not added required params to the modified Drink
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of Drink not found:
                                    value: '{ error: ''Drink not found'' }'
                    description: User did not provide an id
            operationId: id
            summary: Update a Drink
            description: Returns an updated drink when modification of the drink is successful
        delete:
            requestBody:
                description: Id of drink that is to be deleted.
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of drink:
                                value:
                                    - 1
                required: true
            tags:
                - drinks
            parameters:
                -
                    examples:
                        Example of id of drink:
                            value: '1'
                    name: id
                    description: Id of drink
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: Returns 204 if drink is successfully deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Drink not found:
                                    value:
                                        error: Drink not found
                    description: 'Drink is not found, undefined id'
            operationId: id
            summary: Delete a Drink
            description: Deletes a given id drink
    /customers:
        get:
            tags:
                - customers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of customers:
                                    value:
                                        - Alice
                                        - Bob
                                        - Charlie
                    description: returns a list of customers
            summary: get list of all customers from api
            description: Returns a list of all customers in the API to the requesting user
        post:
            requestBody:
                description: Data of customer that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Customer'
                        examples:
                            Example of a submittable data:
                                value:
                                    name: Alice
                                    email: alice@example.com
                                    age: '18'
                required: true
            tags:
                - customers
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Customer that is created:
                                    value:
                                        id: 4
                                        name: Alice
                                        email: alice@example.com
                                        age: '18'
                    description: Return 201 to user if creation of new customer was successful
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Missing params:
                                    value:
                                        -
                                            error: One or multiple param(s) missing
                    description: Return 400 to the user if one or multiple param(s) are missing
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Customer already exists:
                                    value:
                                        -
                                            error: Customer with given data already exists
                    description: Return 409 to the user if customer already exists
            summary: add new customer
            description: Adds a new customer into the array
    '/customers/{id}':
        get:
            tags:
                - customers
            parameters:
                -
                    examples:
                        Example of id of customer:
                            value:
                                - 1
                    name: id
                    description: id of customer the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of customer with id:
                                    value: |-
                                        { 
                                            "id": 1, 
                                            "name": 'Alice', 
                                            "email": 'alice@example.com', 
                                            "age": '18' 
                                        }
                    description: Returns details of a customer to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Invalid customer id:
                                    value:
                                        error: Invalid id inserted
                    description: Returns 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Customer /w+ was not found:
                                    value:
                                        -
                                            error: Customer \w+ was not found in customer array
                    description: Returns 404 to the user if customer with this id is not found
            operationId: id
            summary: Get full details of the customer
            description: Return full details of the given id of customer
        put:
            requestBody:
                description: Properties of customer to be changed
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Customer'
                        examples:
                            Example of customer properties:
                                value:
                                    id: 1
                                    name: Alice
                                    email: alice@example.com
                                    age: '18'
                required: true
            tags:
                - customers
            parameters:
                -
                    examples:
                        Example of id of customer:
                            value: '1'
                    name: id
                    description: Id of customer to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of changed Customer:
                                    value:
                                        id: 1
                                        name: Alice
                                        email: alice@example.com
                                        age: '18'
                    description: Returns the modified Customer to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of invalid params:
                                    value: '{ error: ''Invalid customer ID'' }'
                    description: User has not added required params to the modified Customer
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of Customer not found:
                                    value: '{ error: ''Customer not found'' }'
                    description: User did not provide an id
            operationId: id
            summary: Update a Customer
            description: Returns an updated customer when modification of the customer is successful
        delete:
            requestBody:
                description: Id of customer that is to be deleted.
                content:
                    application/json:
                        schema:
                            type: integer
                        examples:
                            Id of customer:
                                value:
                                    - 1
                required: true
            tags:
                - customers
            parameters:
                -
                    examples:
                        Example of id of customer:
                            value: '1'
                    name: id
                    description: Id of Customer
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: Returns 204 if customer is successfully deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Customer not found:
                                    value:
                                        error: Customer not found
                    description: 'Customer is not found, undefined id'
            operationId: id
            summary: Delete a Customer
            description: Deletes a given id customer
    /orders:
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of orders:
                                    value: |-
                                        [
                                            "id": 1,
                                            "customers_id": 1, 
                                            "order_date": "01.01.2024" 
                                        ]
                    description: returns a list of orders
            summary: get list of all orders from api
            description: Returns a list of all orders in the API to the requesting user
        post:
            requestBody:
                description: Data of order that the user wants to add
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Order'
                        examples:
                            Example of submittable data:
                                value:
                                    id: 1
                                    customers_id: 1
                                    order_date: 01.01.2024
                required: true
            tags:
                - orders
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Order that is created:
                                    value:
                                        id: 1
                                        customers_id: 1
                                        order_date: 01.01.2024
                    description: Return 201 to user if creation of new order was successful
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Missing params:
                                    value:
                                        -
                                            error: One or multiple param(s) missing
                    description: Return 400 to the user if one or multiple param(s) are missing
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Order already exists:
                                    value:
                                        -
                                            error: Order with given data already exists
                    description: Return 409 to the user if order already exists
            summary: Add new order
            description: Adds a new order into the array
    '/orders/{id}/':
        get:
            tags:
                - orders
            parameters:
                -
                    examples:
                        Example of id of customer:
                            value:
                                - 1
                    name: id
                    description: id of order the user has requested
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of order with id:
                                    value:
                                        id: 1
                                        customers_id: 1
                                        order_date: 01.01.2024
                    description: Returns details of a order to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Invalid order id:
                                    value:
                                        error: Invalid id inserted
                    description: Returns 400 to the user if an invalid id was entered
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                'Order /w+ was not found ':
                                    value:
                                        -
                                            error: Order \w+ was not found in customer array
                    description: Returns 404 to the user if order with this id is not found
            operationId: id
            summary: Get full details of the order
            description: Return full details of the given id of order
        put:
            requestBody:
                description: Properties of order to be changed
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Order'
                        examples:
                            Example of order properties:
                                value:
                                    id: 1
                                    customers_id: 1
                                    order_date: 01.01.2024
                required: true
            tags:
                - orders
            parameters:
                -
                    examples:
                        Example of id of order:
                            value: '1'
                    name: id
                    description: Id of order to be updated
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of changed Order:
                                    value:
                                        id: 1
                                        customer_id: 1
                                        order_date: 01.01.2024
                    description: Returns the modified Order to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of invalid params:
                                    value: "{ error: 'Invalid customer ID' }\t\r\n"
                    description: User has not added required params to the modified Order
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                Example of Order with id not found:
                                    value: "{ error: 'Customer not found' }\t\r\n"
                    description: User did not provide an id
            operationId: id
            summary: Update an Order
            description: Returns an updated order when modification of the order is successful
components:
    schemas:
        Error:
            title: Root Type for Error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Drink not found
        Drink:
            title: Root Type for Drink
            description: Properties of a Drink
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                order_id:
                    type: string
                name:
                    type: string
                expiration_date:
                    type: string
                price:
                    format: double
                    type: number
                description:
                    type: string
            example:
                id: 2
                name: Põhja Viin
                price: 1.5
                description: ''
        Customer:
            description: Properties of a Customer
            type: object
            properties:
                id:
                    format: int32
                    description: ''
                    type: integer
                name:
                    description: ''
                    type: string
                email:
                    description: ''
                    type: string
                age:
                    format: int32
                    description: ''
                    type: integer
            example:
                id: 1
                name: Alice
                email: alice@example.com
                age: '18'
        Order:
            description: Properties of an order
            type: object
            properties:
                id:
                    format: int32
                    description: ''
                    type: integer
                customer_id:
                    format: int32
                    description: ''
                    type: integer
                order_date:
                    description: ''
                    type: string
            example:
                id: 1
                customers_id: 1
                order_date: 01.01.2024
